name: Python tests
on: [push, pull_request]

# Avoid running multiple jobs for the same branch
# in case of updates.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --with test
      - name: Run tests
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.base.ref }}" = "master" ]; then
            pytest -v --cov='.' --cov-report term --cov-report xml:coverage.xml
          else
            pytest -v
          fi

      - uses: actions/cache@v4
        id: cache-precommit
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-hooks-v2-${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: Installing pre-commit hooks (cached)
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          pre-commit install --install-hooks

      - name: Run style checking via pre-commit
        run: |
          pre-commit run --files ${{ steps.changed-files.outputs.all_changed_files }}

      - name: ðŸ”¼ Upload coverage to Codecov
        # Run only if PR to master
        if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'master'
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  # Update docker image when committing to prod branch if tests pass
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/prod'
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: manulera/shareyourcloningapi

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: manulera/shareyourcloningapi:latest
          labels: ${{ steps.meta.outputs.labels }}
